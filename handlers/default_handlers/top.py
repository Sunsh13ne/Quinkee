from loader import dp
from aiogram import F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from utils.send_paginated_games import send_paginated_games
from config_data.config import cached_top
from keyboards.inline.back_to_menu_button import back_to_menu_button

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /top
@dp.message(Command('top'))
async def handle_top_command(message: Message, state: FSMContext):
    await send_top(message, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–¢–æ–ø –∏–≥—Ä"
@dp.callback_query(F.data == 'top')
async def handle_top_callback(callback_query: CallbackQuery, state: FSMContext):
    await send_top(callback_query, state)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /top –∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–¢–æ–ø –∏–≥—Ä"
async def send_top(message_or_callback: Message | CallbackQuery, state: FSMContext):
    await state.clear()
    top_list = cached_top.copy()
    if top_list:
        sorted_top_list = sorted(
            [{'appid': game['appid'], 'name': game['name'], 'ccu': game['ccu']}
            for game in top_list.values()],
            key=lambda x: x['ccu'],
            reverse=True
            )
        formated_top_list = [
            {'appid': game['appid'], 'name': game['name'], 'ccu': format_ccu(game['ccu'])}
            for game in sorted_top_list
        ]
        user_id = message_or_callback.from_user.id
        description = "–¢–æ–ø 100 –∏–≥—Ä Steam –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–≥—Ä–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 2 –Ω–µ–¥–µ–ª–∏.\n"\
            "–ú–æ–∂–µ—Ç –∏ –≤–∞–º —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üòé"
        await send_paginated_games(message_or_callback=message_or_callback,
                             state=state,
                             user_id=user_id,
                             games=formated_top_list,
                             description=description,
                             page=1)
    else:
        back_button = await back_to_menu_button()
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
        error_text = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ø–∞ –∏–≥—Ä üò≠. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        if isinstance(message_or_callback, Message): 
            await message_or_callback.answer(
                text=error_text,
                reply_markup=keyboard
            )
        elif isinstance(message_or_callback, CallbackQuery):
            await message_or_callback.message.edit_text(
                text=error_text,
                reply_markup=keyboard
            )

def format_ccu(value):
    if value >= 1_000_000:
        return f"({value / 1_000_000:.1f} –º–ª–Ω.)"
    elif value >= 1_000:
        return f"({value / 1_000:.1f} —Ç—ã—Å.)"
    return f"({value})"