from aiogram import F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.delete_tracked_game import delete_tracked_game
from database.save_tracked_game import save_tracked_game
from keyboards.inline.back_to_menu_button import back_to_menu_button
from loader import router
from aiogram.fsm.context import FSMContext
from utils.check_if_tracked_game import check_if_tracked_game

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–≥—Ä—ã –≤ Steam
def game_following_buttons(steam_link: str, is_tracked: bool, steam_appid: int) -> InlineKeyboardMarkup:
    steam_button = InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ Steam", url=steam_link)
    if is_tracked:
        track_button = InlineKeyboardButton(text="üíî –ü–µ—Ä–µ—Å—Ç–∞—Ç—å\n–æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å",
                                            callback_data=f"untrack_game:{steam_appid}")
    else:
        track_button = InlineKeyboardButton(text="‚ù§Ô∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å",
                                            callback_data=f"track_game:{steam_appid}")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[steam_button, track_button]])
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å"
@router.callback_query(F.data.startswith("track_game:"))
async def track_game(callback: CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id
    steam_appid = int(callback.data.split(":")[1])
    steam_link = f"https://store.steampowered.com/app/{steam_appid}/"
    if steam_appid:
        await save_tracked_game(callback, state=state, user_id=user_id, steam_appid=steam_appid)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–∞
        is_tracked = await check_if_tracked_game(user_id, steam_appid)
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        following_buttons = game_following_buttons(steam_link, is_tracked, steam_appid)
        back_button = await back_to_menu_button()
        keyboard = InlineKeyboardMarkup(inline_keyboard=following_buttons.inline_keyboard + [[back_button]])

        await callback.message.edit_reply_markup(reply_markup=keyboard)
        await callback.answer("–ò–≥—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏–≥—Ä—ã!")
    else:
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ—Å—Ç–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å"
@router.callback_query(F.data.startswith("untrack_game:"))
async def untrack_game(callback: CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id
    steam_appid = callback.data.split(":")[1]
    steam_link = f"https://store.steampowered.com/app/{steam_appid}/"
    if steam_appid:
        await delete_tracked_game(callback, user_id=user_id, steam_appid=steam_appid)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–∞
        is_tracked = await check_if_tracked_game(user_id, steam_appid)
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        following_buttons = game_following_buttons(steam_link, is_tracked, steam_appid)
        back_button = await back_to_menu_button()
        keyboard = InlineKeyboardMarkup(inline_keyboard=following_buttons.inline_keyboard + [[back_button]])

        await callback.message.edit_reply_markup(reply_markup=keyboard)
        await callback.answer("–ò–≥—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è!")
    else:
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ.")